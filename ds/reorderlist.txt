/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode middle(ListNode head){
        ListNode slow=head,fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
    ListNode reverse(ListNode head) {
        ListNode prev = null;

        while(head != null) {
            ListNode tmp = head.next;
            head.next = prev;
            prev = head;
            head = tmp;
        }

        return prev;
    }

    public void reorderList(ListNode head) {
        if(head == null || head.next == null)
            return;
        ListNode slow=middle(head);
        ListNode mid=slow.next;
        slow.next=null;
        mid=reverse(mid);
        while(mid != null) {
            ListNode temp1 = head.next;
            ListNode temp2 = mid.next;
            mid.next = temp1;
            head.next = mid;

            head = temp1;
            mid = temp2;
        }

    } 
}